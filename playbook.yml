- hosts: hub
  tasks:
    - name: Enable Ansible PPA repo
      apt_repository:
        repo: deb http://ppa.launchpad.net/ansible/ansible/ubuntu trusty main
        state: present
        update_cache: no
      become: yes

    - name: Add apt key for Ansible PPA repo
      apt_key:
        keyserver: keyserver.ubuntu.com
        id: 93C4A3FD7BB9C367
      become: yes

    - name: Update apt cache (will fail due to CFEngine repo problems)
      apt:
        update_cache: yes
      become: yes
      ignore_errors: yes

    - name: Install Ansible
      package:
        name: ansible
        state: present
      become: true

    - name: Create 'ssl-controller' user
      user:
        generate_ssh_key: yes
        name: ssl-controller
      become: true
      register: ssl_controller_user

    - name: Install python-pyOpenSSL (needed by some of the Ansible SSL tasks)
      package:
        name: python-openssl
        state: present
      become: true

    - name: Create LetsEncrypt account key
      openssl_privatekey:
        path: /home/ssl-controller/account_key.pem
        type: RSA
        size: 4096
        owner: ssl-controller
        mode: "0400"
      become: true

    - name: Upload Ansible policy for ssl-controller to run
      copy:
        src: ssl-controller-policy
        dest: /home/ssl-controller
        owner: ssl-controller
      become: true

- hosts: leaves
  tasks:
    - name: Enable backports repo
      apt_repository:
        repo: deb http://ftp.debian.org/debian jessie-backports main
        state: present
        update_cache: no
      become: true

    - name: Update apt cache (will fail due to CFEngine repo problems)
      apt:
        update_cache: yes
      become: yes
      ignore_errors: yes

    - name: Install python-pyOpenSSL (needed by some of the Ansible SSL tasks)
      package:
        name: python-openssl
        state: present
        default_release: jessie-backports
      become: true

    - name: Create 'ssl' user
      user:
        name: ssl
      register: ssl_user
      become: yes

    - name: Give ssl user power to reload the IRCd
      lineinfile:
        dest: /etc/sudoers
        state: present
        regexp: '^ssl'
        line: 'ssl ALL=(root) NOPASSWD: /usr/lib/inspircd/inspircd rehash'
        validate: visudo -cf %s
      become: true

    - name: Allow ssl-controller user to ssh into ssl user
      authorized_key:
        key: "{{ hostvars['hub']['ssl_controller_user']['ssh_public_key'] }}" # the SSH key we created above
        user: ssl
      become: true

    - name: Create certificate signing request (CSR)
      openssl_csr:
        # important SSL options
        common_name: "{{ inventory_hostname }}.rippy.ga" # this is basically ignored
        subject_alt_name:
          - "DNS:{{ inventory_hostname }}.rippy.ga" # yes this needs to be in both CN and SAN
          - "DNS:irc.rippy.ga"
        ocsp_must_staple: yes

        # usual file options
        path: "{{ ssl_user['home'] }}/csr.pem"
        owner: "{{ ssl_user['name'] }}"
        privatekey_path: /etc/inspircd/key.pem

        # bullshit no-one cares about
        country_name: GB
        email_address: zofrex@gmail.com
        locality_name: London
        organization_name: Rippy
      become: yes

    - name: Download CSR to controller machine
      fetch:
        src: "{{ ssl_user['home'] }}/csr.pem"
        dest: /tmp

    - name: Upload CSRs to hub
      copy:
        src: /tmp/{{ inventory_hostname }}/home/ssl/csr.pem
        dest: "/home/ssl-controller/csr-{{ inventory_hostname }}.pem"
      become: true
      become_user: ssl-controller
      delegate_to: hub

    - name: Add leaf SSH host key to known_hosts for ssl-controller user
      known_hosts:
        name: "{{ inventory_hostname }}"
        key: "{{ inventory_hostname}} ssh-rsa {{ ansible_facts['ssh_host_key_rsa_public'] }}"
      become: true
      become_user: ssl-controller
      delegate_to: hub

- hosts: hub
  tasks:
    - name: Test that hub can SSH into leaves
      shell: ansible-playbook -u ssl -i hosts.ini test-connection.yml
      args:
        chdir: "{{ ssl_controller_user['home'] }}/ssl-controller-policy"
      become: true
      become_user: "{{ ssl_controller_user['name'] }}"
      changed_when: no
      check_mode: no
